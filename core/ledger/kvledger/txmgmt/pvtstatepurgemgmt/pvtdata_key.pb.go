//
//Copyright IBM Corp. All Rights Reserved.
//
//SPDX-License-Identifier: Apache-2.0

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: pvtdata_key.proto

package pvtstatepurgemgmt

import (
	reflect "reflect"
	sync "sync"

	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PvtdataKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Map map[string]*Collections `protobuf:"bytes,1,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PvtdataKeys) Reset() {
	*x = PvtdataKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pvtdata_key_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PvtdataKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PvtdataKeys) ProtoMessage() {}

func (x *PvtdataKeys) ProtoReflect() protoreflect.Message {
	mi := &file_pvtdata_key_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PvtdataKeys.ProtoReflect.Descriptor instead.
func (*PvtdataKeys) Descriptor() ([]byte, []int) {
	return file_pvtdata_key_proto_rawDescGZIP(), []int{0}
}

func (x *PvtdataKeys) GetMap() map[string]*Collections {
	if x != nil {
		return x.Map
	}
	return nil
}

type Collections struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Map map[string]*KeysAndHashes `protobuf:"bytes,1,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Collections) Reset() {
	*x = Collections{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pvtdata_key_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Collections) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Collections) ProtoMessage() {}

func (x *Collections) ProtoReflect() protoreflect.Message {
	mi := &file_pvtdata_key_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Collections.ProtoReflect.Descriptor instead.
func (*Collections) Descriptor() ([]byte, []int) {
	return file_pvtdata_key_proto_rawDescGZIP(), []int{1}
}

func (x *Collections) GetMap() map[string]*KeysAndHashes {
	if x != nil {
		return x.Map
	}
	return nil
}

type KeysAndHashes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*KeyAndHash `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *KeysAndHashes) Reset() {
	*x = KeysAndHashes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pvtdata_key_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeysAndHashes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeysAndHashes) ProtoMessage() {}

func (x *KeysAndHashes) ProtoReflect() protoreflect.Message {
	mi := &file_pvtdata_key_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeysAndHashes.ProtoReflect.Descriptor instead.
func (*KeysAndHashes) Descriptor() ([]byte, []int) {
	return file_pvtdata_key_proto_rawDescGZIP(), []int{2}
}

func (x *KeysAndHashes) GetList() []*KeyAndHash {
	if x != nil {
		return x.List
	}
	return nil
}

type KeyAndHash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key  string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Hash []byte `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
}

func (x *KeyAndHash) Reset() {
	*x = KeyAndHash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pvtdata_key_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyAndHash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyAndHash) ProtoMessage() {}

func (x *KeyAndHash) ProtoReflect() protoreflect.Message {
	mi := &file_pvtdata_key_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyAndHash.ProtoReflect.Descriptor instead.
func (*KeyAndHash) Descriptor() ([]byte, []int) {
	return file_pvtdata_key_proto_rawDescGZIP(), []int{3}
}

func (x *KeyAndHash) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KeyAndHash) GetHash() []byte {
	if x != nil {
		return x.Hash
	}
	return nil
}

var File_pvtdata_key_proto protoreflect.FileDescriptor

var file_pvtdata_key_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x76, 0x74, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6b, 0x65, 0x79, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x11, 0x70, 0x76, 0x74, 0x73, 0x74, 0x61, 0x74, 0x65, 0x70, 0x75, 0x72,
	0x67, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x22, 0xa0, 0x01, 0x0a, 0x0b, 0x50, 0x76, 0x74, 0x64, 0x61,
	0x74, 0x61, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x39, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x76, 0x74, 0x73, 0x74, 0x61, 0x74, 0x65, 0x70, 0x75,
	0x72, 0x67, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x50, 0x76, 0x74, 0x64, 0x61, 0x74, 0x61, 0x4b,
	0x65, 0x79, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x03, 0x6d, 0x61,
	0x70, 0x1a, 0x56, 0x0a, 0x08, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x70, 0x76, 0x74, 0x73, 0x74, 0x61, 0x74, 0x65, 0x70, 0x75, 0x72, 0x67, 0x65, 0x6d, 0x67,
	0x6d, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa2, 0x01, 0x0a, 0x0b, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x39, 0x0a, 0x03, 0x6d, 0x61, 0x70,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x70, 0x76, 0x74, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x70, 0x75, 0x72, 0x67, 0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x03, 0x6d, 0x61, 0x70, 0x1a, 0x58, 0x0a, 0x08, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x36, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x70, 0x76, 0x74, 0x73, 0x74, 0x61, 0x74, 0x65, 0x70, 0x75, 0x72, 0x67,
	0x65, 0x6d, 0x67, 0x6d, 0x74, 0x2e, 0x4b, 0x65, 0x79, 0x73, 0x41, 0x6e, 0x64, 0x48, 0x61, 0x73,
	0x68, 0x65, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x42,
	0x0a, 0x0d, 0x4b, 0x65, 0x79, 0x73, 0x41, 0x6e, 0x64, 0x48, 0x61, 0x73, 0x68, 0x65, 0x73, 0x12,
	0x31, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x70, 0x76, 0x74, 0x73, 0x74, 0x61, 0x74, 0x65, 0x70, 0x75, 0x72, 0x67, 0x65, 0x6d, 0x67, 0x6d,
	0x74, 0x2e, 0x4b, 0x65, 0x79, 0x41, 0x6e, 0x64, 0x48, 0x61, 0x73, 0x68, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x22, 0x32, 0x0a, 0x0a, 0x4b, 0x65, 0x79, 0x41, 0x6e, 0x64, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x42, 0x4d, 0x5a, 0x4b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x79, 0x70, 0x65, 0x72, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72,
	0x2f, 0x66, 0x61, 0x62, 0x72, 0x69, 0x63, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x2f, 0x6b, 0x76, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x2f, 0x74, 0x78, 0x6d,
	0x67, 0x6d, 0x74, 0x2f, 0x70, 0x76, 0x74, 0x73, 0x74, 0x61, 0x74, 0x65, 0x70, 0x75, 0x72, 0x67,
	0x65, 0x6d, 0x67, 0x6d, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pvtdata_key_proto_rawDescOnce sync.Once
	file_pvtdata_key_proto_rawDescData = file_pvtdata_key_proto_rawDesc
)

func file_pvtdata_key_proto_rawDescGZIP() []byte {
	file_pvtdata_key_proto_rawDescOnce.Do(func() {
		file_pvtdata_key_proto_rawDescData = protoimpl.X.CompressGZIP(file_pvtdata_key_proto_rawDescData)
	})
	return file_pvtdata_key_proto_rawDescData
}

var file_pvtdata_key_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_pvtdata_key_proto_goTypes = []any{
	(*PvtdataKeys)(nil),   // 0: pvtstatepurgemgmt.PvtdataKeys
	(*Collections)(nil),   // 1: pvtstatepurgemgmt.Collections
	(*KeysAndHashes)(nil), // 2: pvtstatepurgemgmt.KeysAndHashes
	(*KeyAndHash)(nil),    // 3: pvtstatepurgemgmt.KeyAndHash
	nil,                   // 4: pvtstatepurgemgmt.PvtdataKeys.MapEntry
	nil,                   // 5: pvtstatepurgemgmt.Collections.MapEntry
}
var file_pvtdata_key_proto_depIdxs = []int32{
	4, // 0: pvtstatepurgemgmt.PvtdataKeys.map:type_name -> pvtstatepurgemgmt.PvtdataKeys.MapEntry
	5, // 1: pvtstatepurgemgmt.Collections.map:type_name -> pvtstatepurgemgmt.Collections.MapEntry
	3, // 2: pvtstatepurgemgmt.KeysAndHashes.list:type_name -> pvtstatepurgemgmt.KeyAndHash
	1, // 3: pvtstatepurgemgmt.PvtdataKeys.MapEntry.value:type_name -> pvtstatepurgemgmt.Collections
	2, // 4: pvtstatepurgemgmt.Collections.MapEntry.value:type_name -> pvtstatepurgemgmt.KeysAndHashes
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_pvtdata_key_proto_init() }
func file_pvtdata_key_proto_init() {
	if File_pvtdata_key_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pvtdata_key_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PvtdataKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pvtdata_key_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Collections); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pvtdata_key_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*KeysAndHashes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pvtdata_key_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*KeyAndHash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pvtdata_key_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pvtdata_key_proto_goTypes,
		DependencyIndexes: file_pvtdata_key_proto_depIdxs,
		MessageInfos:      file_pvtdata_key_proto_msgTypes,
	}.Build()
	File_pvtdata_key_proto = out.File
	file_pvtdata_key_proto_rawDesc = nil
	file_pvtdata_key_proto_goTypes = nil
	file_pvtdata_key_proto_depIdxs = nil
}
