// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	smartbftprotos "github.com/hyperledger-labs/SmartBFT/smartbftprotos"
	mock "github.com/stretchr/testify/mock"
)

// CommMock is an autogenerated mock type for the CommMock type
type CommMock struct {
	mock.Mock
}

// BroadcastConsensus provides a mock function with given fields: m
func (_m *CommMock) BroadcastConsensus(m *smartbftprotos.Message) {
	_m.Called(m)
}

// Nodes provides a mock function with given fields:
func (_m *CommMock) Nodes() []uint64 {
	ret := _m.Called()

	var r0 []uint64
	if rf, ok := ret.Get(0).(func() []uint64); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]uint64)
		}
	}

	return r0
}

// SendConsensus provides a mock function with given fields: targetID, m
func (_m *CommMock) SendConsensus(targetID uint64, m *smartbftprotos.Message) {
	_m.Called(targetID, m)
}

// SendTransaction provides a mock function with given fields: targetID, request
func (_m *CommMock) SendTransaction(targetID uint64, request []byte) {
	_m.Called(targetID, request)
}
