// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import (
	types "github.com/hyperledger-labs/SmartBFT/pkg/types"
	mock "github.com/stretchr/testify/mock"
)

// SignerMock is an autogenerated mock type for the SignerMock type
type SignerMock struct {
	mock.Mock
}

// Sign provides a mock function with given fields: _a0
func (_m *SignerMock) Sign(_a0 []byte) []byte {
	ret := _m.Called(_a0)

	var r0 []byte
	if rf, ok := ret.Get(0).(func([]byte) []byte); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	return r0
}

// SignProposal provides a mock function with given fields: proposal, auxiliaryInput
func (_m *SignerMock) SignProposal(proposal types.Proposal, auxiliaryInput []byte) *types.Signature {
	ret := _m.Called(proposal, auxiliaryInput)

	var r0 *types.Signature
	if rf, ok := ret.Get(0).(func(types.Proposal, []byte) *types.Signature); ok {
		r0 = rf(proposal, auxiliaryInput)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*types.Signature)
		}
	}

	return r0
}
